for(e in unique(datospuntos$home_team)){
victorias <- nrow(datospuntos[(datospuntos$home_team == e & datospuntos$resultadopartido == "H")
|(datospuntos$away_team == e & datospuntos$resultadopartido == "A"),])
empates <- nrow(datospuntos[(datospuntos$home_team == e | datospuntos$away_team == e) & datospuntos$resultadopartido == "D",])
framedatos <- data.frame(equipo = e, puntos = (3*victorias + empates), stringsAsFactors = FALSE)
scoreboard <- rbind.data.frame(scoreboard,framedatos)
}
scoreboard <- scoreboard %>%
arrange(desc(puntos))
ganadorespremier <- c(ganadorespremier,scoreboard[1,1])
}
resultadossimulacion <- as.data.frame(table(ganadorespremier))
resultadossimulacion
}
simularpremier(10)
simularpremier(500)
simularpremier <- function(n){
ganadorespremier <- c()
for(epochs in 1:n){
partidospredecir$resultadoshome <- apply(partidospredecir,1,funcionhome)
partidospredecir$resultadosaway <- apply(partidospredecir,1,funcionaway)
partidospredecir$resultadopartido <- apply(partidospredecir,1, funcionganapart)
datospuntos <- partidospredecir[c(1,2,3,40,41,42)]
scoreboard <- data.frame(equipo = character(),
puntos = double(),
stringsAsFactors = FALSE)
for(e in unique(datospuntos$home_team)){
victorias <- nrow(datospuntos[(datospuntos$home_team == e & datospuntos$resultadopartido == "H")
|(datospuntos$away_team == e & datospuntos$resultadopartido == "A"),])
empates <- nrow(datospuntos[(datospuntos$home_team == e | datospuntos$away_team == e) & datospuntos$resultadopartido == "D",])
framedatos <- data.frame(equipo = e, puntos = (3*victorias + empates), stringsAsFactors = FALSE)
scoreboard <- rbind.data.frame(scoreboard,framedatos)
}
scoreboard <- scoreboard %>%
arrange(desc(puntos))
ganadorespremier <- c(ganadorespremier,scoreboard[1,1])
}
resultadossimulacion <- as.data.frame(table(ganadorespremier))
resultadossimulacion %>%
arrange(desc(Freq)) %>%
mutate(porcentajevictoria = resultadossimulacion$Freq/n)
}
simularpremier(10)
simularpremier <- function(n){
ganadorespremier <- c()
for(epochs in 1:n){
partidospredecir$resultadoshome <- apply(partidospredecir,1,funcionhome)
partidospredecir$resultadosaway <- apply(partidospredecir,1,funcionaway)
partidospredecir$resultadopartido <- apply(partidospredecir,1, funcionganapart)
datospuntos <- partidospredecir[c(1,2,3,40,41,42)]
scoreboard <- data.frame(equipo = character(),
puntos = double(),
stringsAsFactors = FALSE)
for(e in unique(datospuntos$home_team)){
victorias <- nrow(datospuntos[(datospuntos$home_team == e & datospuntos$resultadopartido == "H")
|(datospuntos$away_team == e & datospuntos$resultadopartido == "A"),])
empates <- nrow(datospuntos[(datospuntos$home_team == e | datospuntos$away_team == e) & datospuntos$resultadopartido == "D",])
framedatos <- data.frame(equipo = e, puntos = (3*victorias + empates), stringsAsFactors = FALSE)
scoreboard <- rbind.data.frame(scoreboard,framedatos)
}
scoreboard <- scoreboard %>%
arrange(desc(puntos))
ganadorespremier <- c(ganadorespremier,scoreboard[1,1])
}
resultadossimulacion <- as.data.frame(table(ganadorespremier))
resultadossimulacion %>%
mutate(porcentajevictoria = resultadossimulacion$Freq/n) %>%
arrange(desc(Freq))
}
simularpremier(50)
simularpremier(1000)
for(i in 1:23){}
vec <- c()
vec <- 1
for (i in 2:23) {
}
for (i in 2:23) {
vec <- vec*i
}
vec/(365**23)
(1*2*3*4*5*6*7*8*9*10*11*12*13*14*15*16*17*16*19*20*31*22*23)/(365**24)
(1*2*3*4*5*6*7*8*9*10*11*12*13*14*15*16*17*16*19*20*21*22*23)/(365**24)
datahist <- data.frame(empresa)
datahist <- data.frame(empresa = character(),
precio = double())
for(d in c("^GSPC.csv","ADBE.csv","ALXN.csv","AMZN.csv",
"BRK-B.csv","CRM.csv","DELL.csv","FB.csv","GLD.csv",
"GMAB.csv","GNMSF.csv","GOOG.csv","GOOGL.csv","INCY.csv",
"MSFT.csv","NFLX.csv","NTDOF.csv","NTDOY.csv","PPTDF.csv",
"QCOM.csv","REGN.csv","SBHMY.csv","SPOT.csv","TTWO.csv","VRTX.csv",
"WXXWY.csv")){
datos <- read
}
for(d in c("^GSPC.csv","ADBE.csv","ALXN.csv","AMZN.csv",
"BRK-B.csv","CRM.csv","DELL.csv","FB.csv","GLD.csv",
"GMAB.csv","GNMSF.csv","GOOG.csv","GOOGL.csv","INCY.csv",
"MSFT.csv","NFLX.csv","NTDOF.csv","NTDOY.csv","PPTDF.csv",
"QCOM.csv","REGN.csv","SBHMY.csv","SPOT.csv","TTWO.csv","VRTX.csv",
"WXXWY.csv")){
datos <- readr::read_csv(d,col_names = TRUE)
datos$Empresa <- substring(i,first = 1,last = (length(i)-4))
datos <- datos[c("Empresa","Adj Close")]
}
require(dplyr)
require(lubridate)
require(readr)
allzonenames()
allzonename()
olson_time_zones()
OlsonNames()
fecha_ecplise_inicial <- ymd_hms("2017/08/21 18:26:40")
fecha_ecplise_inicial
fecha_ecplise_inicial <- ymd_hms("2017/08/21 18:26:40", tz = "UTC")
fecha_ecplise_inicial
?duration
synodic_month <- duration("29d 12H 44M 3S")
synodic_month
fecha_ecplise_inicial <- ymd_hms("2017/08/21 18:26:40", tz = "UTC")
synodic_month <- duration("29d 12H 44M 3S")
saros <- synodic_month*223
fecha_ecplise_final <- fecha_ecplise_inicial+saros
fecha_ecplise_inicial <- ymd_hms("2017/08/21 18:26:40", tz = "UTC")
synodic_month <- duration("29d 12H 44M 3S")
saros <- synodic_month*223
print("La fecha del siguiente eclipse solar es ",fecha_ecplise_inicial+saros)
print("La fecha del siguiente eclipse solar es ",paste(fecha_ecplise_inicial+saros))
sprintf("La fecha del siguiente eclipse solar es ",paste(fecha_ecplise_inicial+saros))
sprintf("La fecha del siguiente eclipse solar es ",fecha_ecplise_inicial+saros)
paste0("La fecha del siguiente eclipse solar es ",fecha_ecplise_inicial+saros)
paste("La fecha del siguiente eclipse solar es ",fecha_ecplise_inicial+saros)
paste("La fecha del siguiente eclipse solar es",fecha_ecplise_inicial+saros)
setwd("D:/UFM/Semestre VI/Data Wrangling/Clase 5")
require(dplyr)
require(lubridate)
require(readxl)
datos <- read_xlsx('data.xlsx')
head(datos)
glimpse(datos)
head(datos)
ymd(datos$`Fecha Creación`)
head(datos)
dmy(datos$`Fecha Creación`)
as.Date(datos$`Fecha Creación`)
head(datos)
max(datos$`Fecha Creación`)
min(datos$`Fecha Creación`)
max(datos$`Fecha Creación`)
head(datos)
as.Date("43020")
ymd("43020")
as.Date.numeric(43020)
?as.Date.numeric
?lubridate
head(datos)
parse_date_time(43020)
parse_date_time(43020,"%Y %m %d")
parse_date_time(43020,"ymd")
head(datos)
parse_date_time2(43020,"ymd")
parse_date_time2("43020","ymd")
head(datos)
as_date("43020")
head(datos)
datos$intervalo <- datos$`Hora Creación` %--% datos$`Hora Final`
head(datos)
datos$intervalo <- duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
head(datos)
?filter
llamadas_mensuales <- datos %>%
select(`Hora Creación`,`Caller ID`,Call) %>%
filter(Call == 1) %>%
group_by(month(`Hora Creación`),`Caller ID`) %>%
summarise(cant_llamadas = count(Call))
llamadas_mensuales <- datos %>%
select(`Hora Creación`,`Caller ID`,Call) %>%
filter(Call == 1) %>%
group_by(month(`Hora Creación`),`Caller ID`) %>%
summarise(cant_llamadas = count())
llamadas_mensuales <- datos %>%
select(`Hora Creación`,`Caller ID`,Call) %>%
filter(Call == 1) %>%
group_by(month(`Hora Creación`),`Caller ID`) %>%
summarise(cant_llamadas = nrow(Call))
llamadas_mensuales <- datos %>%
select(`Hora Creación`,`Caller ID`,Call) %>%
filter(Call == 1) %>%
group_by(month(`Hora Creación`),`Caller ID`) %>%
summarise(cant_llamadas = n())
llamadas_mensuales
#Ejercicio 3
dias_semana <- datos %>%
group_by(wday(`Hora Creación`)) %>%
summarise(items = n())
dias_semana
#Ejercicio 3
dias_semana <- datos %>%
group_by(wday(`Hora Creación`, label = TRUE)) %>%
summarise(items = n())
dias_semana
datos
require(dplyr)
require(lubridate)
require(readr)
fecha_ecplise_inicial <- ymd_hms("2017/08/21 18:26:40", tz = "UTC")
synodic_month <- duration("29d 12H 44M 3S")
saros <- synodic_month*223
paste("La fecha del siguiente eclipse solar es",fecha_ecplise_inicial+saros)
datos <- read_csv('data.xlsx')
datos <- read_csv('data.csv')
head(datos)
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
#Ejercicio 2
llamadas_mensuales <- datos %>%
select(`Hora Creación`,`Caller ID`,Call) %>%
filter(Call == 1) %>%
group_by(month(`Hora Creación`),`Caller ID`) %>%
summarise(cant_llamadas = n())
#Ejercicio 3
dias_semana <- datos %>%
group_by(wday(`Hora Creación`, label = TRUE)) %>%
summarise(items = n())
datos <- read_csv('data.csv')
head(datos)
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Creación`)
#Ejercicio 2
llamadas_mensuales <- datos %>%
select(`Hora Creación`,`Caller ID`,Call) %>%
filter(Call == 1) %>%
group_by(month(`Hora Creación`),`Caller ID`) %>%
summarise(cant_llamadas = n())
#Ejercicio 3
dias_semana <- datos %>%
group_by(wday(`Hora Creación`, label = TRUE)) %>%
summarise(items = n())
datos <- read_csv('data.csv')
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos
datos$`Fecha Final` <- dmy(datos$`Fecha Creación`)
datos
datos <- read_csv('data.csv')
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Final`)
#Ejercicio 2
llamadas_mensuales <- datos %>%
select(`Hora Creación`,`Caller ID`,Call) %>%
filter(Call == 1) %>%
group_by(month(`Hora Creación`),`Caller ID`) %>%
summarise(cant_llamadas = n())
#Ejercicio 3
dias_semana <- datos %>%
group_by(wday(`Hora Creación`, label = TRUE)) %>%
summarise(items = n())
datos <- read_csv('data.csv')
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Final`)
fechahora_creacion <- make_datetime(year = year(datos$`Fecha Creación`), month = month(datos$`Fecha Creación`),
day = day(datos$`Fecha Creación`), hour = hour(datos$`Hora Creación`),
min = minute(datos$`Hora Creación`), sec = second(datos$`Hora Creación`))
fechahora_final <- make_datetime(year = year(datos$`Fecha Final`), month = month(datos$`Fecha Final`),
day = day(datos$`Fecha Final`), hour = hour(datos$`Hora Final`),
min = minute(datos$`Hora Final`), sec = second(datos$`Hora Final`))
datos
fechahora_creacion <- make_datetime(year = year(datos$`Fecha Creación`), month = month(datos$`Fecha Creación`),
day = day(datos$`Fecha Creación`), hour = hour(datos$`Hora Creación`),
min = minute(datos$`Hora Creación`), sec = second(datos$`Hora Creación`))
datos <- read_csv('data.csv')
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Final`)
datos$fechahora_creacion <- make_datetime(year = year(datos$`Fecha Creación`), month = month(datos$`Fecha Creación`),
day = day(datos$`Fecha Creación`), hour = hour(datos$`Hora Creación`),
min = minute(datos$`Hora Creación`), sec = second(datos$`Hora Creación`))
datos$fechahora_final <- make_datetime(year = year(datos$`Fecha Final`), month = month(datos$`Fecha Final`),
day = day(datos$`Fecha Final`), hour = hour(datos$`Hora Final`),
min = minute(datos$`Hora Final`), sec = second(datos$`Hora Final`))
#Ejercicio 2
llamadas_mensuales <- datos %>%
select(`Hora Creación`,`Caller ID`,Call) %>%
filter(Call == 1) %>%
group_by(month(`Hora Creación`),`Caller ID`) %>%
summarise(cant_llamadas = n())
#Ejercicio 3
dias_semana <- datos %>%
group_by(wday(`Hora Creación`, label = TRUE)) %>%
summarise(items = n())
datos <- read_csv('data.csv')
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Final`)
datos$fechahora_creacion <- make_datetime(year = year(datos$`Fecha Creación`), month = month(datos$`Fecha Creación`),
day = day(datos$`Fecha Creación`), hour = hour(datos$`Hora Creación`),
min = minute(datos$`Hora Creación`), sec = second(datos$`Hora Creación`))
datos$fechahora_final <- make_datetime(year = year(datos$`Fecha Final`), month = month(datos$`Fecha Final`),
day = day(datos$`Fecha Final`), hour = hour(datos$`Hora Final`),
min = minute(datos$`Hora Final`), sec = second(datos$`Hora Final`))
datos
datos <- read_csv('data.csv')
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Final`)
datos$fechahora_creacion <- make_datetime(year = year(datos$`Fecha Creación`), month = month(datos$`Fecha Creación`),
day = day(datos$`Fecha Creación`), hour = hour(datos$`Hora Creación`),
min = minute(datos$`Hora Creación`), sec = second(datos$`Hora Creación`))
datos$fechahora_final <- make_datetime(year = year(datos$`Fecha Final`), month = month(datos$`Fecha Final`),
day = day(datos$`Fecha Final`), hour = hour(datos$`Hora Final`),
min = minute(datos$`Hora Final`), sec = second(datos$`Hora Final`))
#Ejercicio 2
llamadas_mensuales <- datos %>%
select(fechahora_creacion,`Caller ID`,Call) %>%
filter(Call == 1) %>%
group_by(month(fechahora_creacion),`Caller ID`) %>%
summarise(cant_llamadas = n())
#Ejercicio 3
dias_semana <- datos %>%
group_by(wday(fechahora_creacion, label = TRUE)) %>%
summarise(items = n())
dias_semana
llamadas_mensuales
datos <- read_csv('data.csv')
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Final`)
datos$fechahora_creacion <- make_datetime(year = year(datos$`Fecha Creación`), month = month(datos$`Fecha Creación`),
day = day(datos$`Fecha Creación`), hour = hour(datos$`Hora Creación`),
min = minute(datos$`Hora Creación`), sec = second(datos$`Hora Creación`))
datos$fechahora_final <- make_datetime(year = year(datos$`Fecha Final`), month = month(datos$`Fecha Final`),
day = day(datos$`Fecha Final`), hour = hour(datos$`Hora Final`),
min = minute(datos$`Hora Final`), sec = second(datos$`Hora Final`))
#Ejercicio 2
llamadas_mensuales <- datos %>%
select(fechahora_creacion,`Caller ID`,Call) %>%
filter(Call == 1) %>%
group_by(month(fechahora_creacion, label = TRUE),`Caller ID`) %>%
summarise(cant_llamadas = n())
#Ejercicio 3
dias_semana <- datos %>%
group_by(wday(fechahora_creacion, label = TRUE)) %>%
summarise(items = n())
#Ejercicio 4
items_por_mes <- datos %>%
group_by(month(fechahora_creacion, label = TRUE)) %>%
summarise(cant_transacciones = n())
items_por_mes
llamadas_mensuales <- datos %>%
select(fechahora_creacion,Call) %>%
filter(Call == 1) %>%
group_by(month(fechahora_creacion, label = TRUE)) %>%
summarise(cant_llamadas = n()) %>%
rename(mes = "month(fechahora_creacion, label = TRUE)")
require(dplyr)
require(lubridate)
require(readr)
require(ggplot2)
datos <- read_csv('data.csv')
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Final`)
datos$fechahora_creacion <- make_datetime(year = year(datos$`Fecha Creación`), month = month(datos$`Fecha Creación`),
day = day(datos$`Fecha Creación`), hour = hour(datos$`Hora Creación`),
min = minute(datos$`Hora Creación`), sec = second(datos$`Hora Creación`))
datos$fechahora_final <- make_datetime(year = year(datos$`Fecha Final`), month = month(datos$`Fecha Final`),
day = day(datos$`Fecha Final`), hour = hour(datos$`Hora Final`),
min = minute(datos$`Hora Final`), sec = second(datos$`Hora Final`))
datos$`Caller ID` <- as.factor(datos$`Caller ID`)
llamadas_mensuales <- datos %>%
select(fechahora_creacion,Call) %>%
filter(Call == 1) %>%
group_by(month(fechahora_creacion, label = TRUE)) %>%
summarise(cant_llamadas = n()) %>%
rename(mes = "month(fechahora_creacion, label = TRUE)")
ggplot(data=llamadas_mensuales, aes(x=mes, y=cant_llamadas)) +
geom_line()+
geom_point()
ggplot(data=llamadas_mensuales, aes(x=mes, y=cant_llamadas)) +
geom_line()+
geom_point()
llamadas_mensuales
ggplot(data=llamadas_mensuales, aes(x=mes, y=cant_llamadas, group = 1)) +
geom_line()+
geom_point()
llamadas_semanales <- datos %>%
select(fechahora_creacion,Call) %>%
filter(Call == 1) %>%
group_by(wday(fechahora_creacion, label = TRUE)) %>%
summarise(cant_llamadas = n()) %>%
rename(dia = "wday(fechahora_creacion, label = TRUE)")
ggplot(data=llamadas_semanales, aes(x=dia, y=cant_llamadas, group = 1)) +
geom_line()+
geom_point()
ggplot(data=llamadas_mensuales, aes(x=mes, y=cant_llamadas, group = 1)) +
geom_line()+
geom_point()
ggplot(data=llamadas_semanales, aes(x=dia, y=cant_llamadas, group = 1)) +
geom_line()+
geom_point()
datos
?duration
datos$intervalo <- dminutes(datos$intervalo)
datos
datos$intervalo <- duration(sec = datos$intervalo)
datos
datos <- read_csv('data.csv')
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Final`)
datos$fechahora_creacion <- make_datetime(year = year(datos$`Fecha Creación`), month = month(datos$`Fecha Creación`),
day = day(datos$`Fecha Creación`), hour = hour(datos$`Hora Creación`),
min = minute(datos$`Hora Creación`), sec = second(datos$`Hora Creación`))
datos$fechahora_final <- make_datetime(year = year(datos$`Fecha Final`), month = month(datos$`Fecha Final`),
day = day(datos$`Fecha Final`), hour = hour(datos$`Hora Final`),
min = minute(datos$`Hora Final`), sec = second(datos$`Hora Final`))
datos$`Caller ID` <- as.factor(datos$`Caller ID`)
datos$intervalo <- duration(sec = datos$intervalo)
datos
datos$intervalo <- duration(datos$intervalo, units = "minutes")
datos
?as.duration
datos$minutos <- as.numeric(datos$intervalo, "minutes")
datos
datos <- read_csv('data.csv')
datos$intervalo <- as.duration(datos$`Hora Creación` %--% datos$`Hora Final`)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Final`)
datos$fechahora_creacion <- make_datetime(year = year(datos$`Fecha Creación`), month = month(datos$`Fecha Creación`),
day = day(datos$`Fecha Creación`), hour = hour(datos$`Hora Creación`),
min = minute(datos$`Hora Creación`), sec = second(datos$`Hora Creación`))
datos$fechahora_final <- make_datetime(year = year(datos$`Fecha Final`), month = month(datos$`Fecha Final`),
day = day(datos$`Fecha Final`), hour = hour(datos$`Hora Final`),
min = minute(datos$`Hora Final`), sec = second(datos$`Hora Final`))
datos$`Caller ID` <- as.factor(datos$`Caller ID`)
datos
datos$minutos <- datos$intervalo/60
datos
datos$minutos <- as.numeric(datos$intervalo/60)
datos
#Existen dos estacionalidades en las llamadas, como se puede ver en la primera grafica, los meses de Marzo, Abril y Diciembre tienen picos positivos mientras que febrero y septiembre tienen picos negativos. Ademas de esto, durante la semana se puede ver una clara estacionalidad, durante el principio de la semena, que llega a su cumulo el día miercoles y cae el dia jueves.
#Ejercicio 6
promedio_llamada_tiempo <- datos %>%
select(Call,intervalo) %>%
filter(Call = 1) %>%
summarise(promedio = mean(intervalo))
#Existen dos estacionalidades en las llamadas, como se puede ver en la primera grafica, los meses de Marzo, Abril y Diciembre tienen picos positivos mientras que febrero y septiembre tienen picos negativos. Ademas de esto, durante la semana se puede ver una clara estacionalidad, durante el principio de la semena, que llega a su cumulo el día miercoles y cae el dia jueves.
#Ejercicio 6
promedio_llamada_tiempo <- datos %>%
select(Call,intervalo) %>%
filter(Call == 1) %>%
summarise(promedio = mean(intervalo))
promedio_llamada_tiempo
print(paste("El tiempo promedio por llamada en minutos es de",as.numeric(promedio_llamada_tiempo/60))))
print(paste("El tiempo promedio por llamada en minutos es de",as.numeric(promedio_llamada_tiempo/60)))
print(paste("El tiempo promedio por llamada en minutos es de",round(numeric(promedio_llamada_tiempo/60)),2))
print(paste("El tiempo promedio por llamada en minutos es de",round(as.numeric(promedio_llamada_tiempo/60)),2))
print(paste("El tiempo promedio por llamada en minutos es de",round(as.numeric(promedio_llamada_tiempo/60),2)))
require(tidyverse)
#Ejercicio 7
datos$categoria_minutos <- apply(datos$minutos,1,function(x){base*round(x/5)})
#Ejercicio 7
datos$categoria_minutos <- apply(datos$minutos,1,function(x) base*round(x/5))
#Ejercicio 7
datos$categoria_minutos <- apply(datos$minutos,1,function(x) 5*round(x/5))
#Ejercicio 7
datos$categoria_minutos <- 5*round(datos$minutos/5)
datos
tabla_frec <- table(datos$categoria_minutos)
print(tabla_frec)
tabla_frec
tabla_frec <- as.data.frame(table(datos$categoria_minutos))
tabla_frec
datos
datos <- read_csv('data.csv')
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$`Fecha Final` <- dmy(datos$`Fecha Final`)
datos$fechahora_creacion <- make_datetime(year = year(datos$`Fecha Creación`), month = month(datos$`Fecha Creación`),
day = day(datos$`Fecha Creación`), hour = hour(datos$`Hora Creación`),
min = minute(datos$`Hora Creación`), sec = second(datos$`Hora Creación`))
datos$fechahora_final <- make_datetime(year = year(datos$`Fecha Final`), month = month(datos$`Fecha Final`),
day = day(datos$`Fecha Final`), hour = hour(datos$`Hora Final`),
min = minute(datos$`Hora Final`), sec = second(datos$`Hora Final`))
datos$intervalo <- as.duration(datos$fechahora_creacion %--% datos$fechahora_final)
datos$`Caller ID` <- as.factor(datos$`Caller ID`)
datos$minutos <- as.numeric(datos$intervalo/60)
datos$categoria_minutos <- 5*round(datos$minutos/5)
tabla_frec <- as.data.frame(table(datos$categoria_minutos))
tabla_frec
datos
datos$categoria_minutos <- 5*round(datos$minutos/5)
datos_tabla <- datos %>%
select(Call,categoria_minutos) %>%
filter(Call == 1)
tabla_frec <- as.data.frame(table(datos_tabla$categoria_minutos))
print(tabla_frec)
tabla_frec <- as.data.frame(table(datos_tabla$categoria_minutos)) %>%
rename(tiempo_de_llamada_en_minutos = Var1)
print(tabla_frec)
ggplot(data=tabla_frec, aes(x=tiempo_de_llamada_en_minutos))+
geom_histogram()
ggplot(data=tabla_frec, aes(x=tiempo_de_llamada_en_minutos))+
geom_bar()
print(tabla_frec)
ggplot(data=tabla_frec, aes(x=tiempo_de_llamada_en_minutos, y = Freq))+
geom_bar()
ggplot(data=tabla_frec, aes(x=tiempo_de_llamada_en_minutos))+ geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
ggplot(data=tabla_frec, aes(x=tiempo_de_llamada_en_minutos))+ geom_bar(fill="lightblue",aes(y=..count../sum(..count..)))
ggplot(data=tabla_frec, aes(x=tiempo_de_llamada_en_minutos, y = Freq))
ggplot(data=tabla_frec, aes(x=tiempo_de_llamada_en_minutos, y = Freq)) + geom_bar()
ggplot(data=tabla_frec, aes(x=tiempo_de_llamada_en_minutos, y = Freq)) + geom_bar(stast = 'identity')
ggplot(data=tabla_frec, aes(x=tiempo_de_llamada_en_minutos, y = Freq)) + geom_bar(stat = 'identity')
